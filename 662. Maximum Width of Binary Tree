/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*,int>>q;
        q.push(make_pair(root,0));
        long ans=0;
        while(!q.empty())
        {
            TreeNode *node=q.front().first;
            long start=q.front().second;
            long end=q.back().second;
            int len=q.size();
            ans=max(ans,end-start+1);
            for(int i=0;i<len;i++)
            {
                TreeNode *temp=q.front().first;
                long idx=q.front().second;
                q.pop();
                if(temp->left)
                {
                    q.push(make_pair(temp->left,2*idx+1));
                }
                if(temp->right)
                {
                    q.push(make_pair(temp->right,2*idx+2));
                }
            }
        }
        return ans;
    }
};
